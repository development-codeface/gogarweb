{"version":3,"sources":["/Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.html","/Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.scss","/Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.ts","/Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.module.ts","/Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.service.ts"],"names":[],"mappings":"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","file":"login.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 login-container\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n            <div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\r\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n          \\r\\n                \\r\\n                    \\r\\n                \\r\\n                                     \\r\\n                          <p class=\\\"loader-text\\\">GO<span>GARS</span></p>              \\r\\n               \\r\\n                  \\r\\n           \\r\\n             \\r\\n            <div class=\\\"card-body text-center pb-1\\\">\\r\\n                <h2>Admin login</h2>\\r\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"invalidusername\\\">Incorrect username or password</small>\\r\\n\\r\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('required')\\\">Email\\r\\n                            is required</small>\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('email')\\\">Invalid\\r\\n                            email address</small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('required')\\\">Password\\r\\n                            is required</small>\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('minlength')\\\">Password\\r\\n                            isn't long enough, minimum of 6 characters</small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group d-flex justify-content-between\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"login-checkbox\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"login-checkbox\\\">Keep me signed in.</label>\\r\\n                        </div>\\r\\n                        <a class=\\\"transition pull-right\\\" href=\\\"javascript:void(0);\\\">Forgot password?</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"card-footer text-center bg-transparent\\\">\\r\\n                <ul class=\\\"list-inline mb-0\\\">\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-facebook fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-twitter fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-google fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.html\n// module id = ../../../../../src/app/pages/login/login.component.html\n// module chunks = login.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-container {\\n  position: absolute; }\\n  .login-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n  .loader-text {\\n  font-family: \\\"MoonHouse\\\";\\n  margin: auto;\\n  font-size: 20px; }\\n  .loader-text span {\\n    color: red; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.scss\n// module id = ../../../../../src/app/pages/login/login.component.scss\n// module chunks = login.module","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { LoginService } from './login.service'\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [LoginService]\r\n})\r\nexport class LoginComponent {\r\n    public router: Router;\r\n    public form: FormGroup;\r\n    public email: AbstractControl;\r\n    public password: AbstractControl;\r\n    public invalidusername: boolean = false;\r\n    public admindata: any = [];\r\n    constructor(router: Router, fb: FormBuilder, public loginservice: LoginService) {\r\n        this.router = router;\r\n        this.form = fb.group({\r\n            'email': ['', Validators.compose([Validators.required, CustomValidators.email])],\r\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])]\r\n        });\r\n\r\n        this.email = this.form.controls['email'];\r\n        this.password = this.form.controls['password'];\r\n    }\r\n\r\n    public onSubmit(values: Object): void {\r\n        this.invalidusername = false;\r\n        if (this.form.valid) {\r\n            this.loginservice.loginadmin(values).then((result) => {\r\n                this.admindata = result;\r\n                if (this.admindata.result == true) {\r\n                    localStorage.setItem('userdata', JSON.stringify(this.admindata.details));\r\n                    this.router.navigateByUrl('/');\r\n                }\r\n                else {\r\n                    this.invalidusername = true;\r\n                }\r\n\r\n            }, (err) => {\r\n                this.invalidusername = true;\r\n            });;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        document.getElementById('preloader').classList.add('hide');\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\n\r\nexport class LoginModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './login.model';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    public url = \"api/users\";\r\n    public baseurl=\"http://codefacetech.com/demo/gogars/Apis/index.php/\"\r\n    constructor(public http:HttpClient) { }\r\n    loginadmin(data) {\r\n        console.log(data);\r\n        return new Promise((resolve, reject) => {\r\n            this.http.post(this.baseurl+'Adminlogin',JSON.stringify(data))\r\n          .subscribe(\r\n            (val) => {\r\n                console.log(\"POST call successful value returned in body\",\r\n                            val);\r\n                            resolve(val);\r\n                                    },\r\n            response => {\r\n                console.log(\"POST call in error\", response);\r\n                reject(response);\r\n            },\r\n            () => {\r\n                console.log(\"The POST observable is now completed.\");\r\n            });\r\n          });\r\n        \r\n       \r\n      }\r\n      login(data): Observable<User[]> {\r\n        return this.http.get<User[]>(this.url);\r\n    }\r\n    getUsers(): Observable<User[]> {\r\n        return this.http.get<User[]>(this.url);\r\n    }\r\n\r\n    addUser(user:User){\t    \r\n        return this.http.post(this.url, user);\r\n    }\r\n\r\n    updateUser(user:User){\r\n        return this.http.put(this.url, user);\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete(this.url + \"/\" + id);\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// /Users/irshadillias/Personal/codeface/gogar/gogarsweb/src/app/pages/login/login.service.ts"],"sourceRoot":"webpack:///"}